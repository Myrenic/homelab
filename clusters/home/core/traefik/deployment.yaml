apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: traefik-acme-pvc
  namespace: traefik
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  namespace: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      containers:
      - name: traefik
        image: traefik:v2.10
        env:
        - name: CLOUDFLARE_DNS_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: cloudflare-api-token-secret
              key: CLOUDFLARE_DNS_API_TOKEN
        args:
        - --api.dashboard=true
        - --entrypoints.web.address=:80
        - --entrypoints.web.http.redirections.entrypoint.to=websecure
        - --entrypoints.web.http.redirections.entrypoint.scheme=https
        - --entrypoints.websecure.address=:443
        - --providers.kubernetesingress.ingressclass=traefik
        - --certificatesresolvers.letsencrypt.acme.email=38107502+Myrenic@users.noreply.github.com
        - --certificatesresolvers.letsencrypt.acme.storage=/data/acme.json
        - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
        - --certificatesresolvers.letsencrypt.acme.dnschallenge.delaybeforecheck=0
        ports:
        - containerPort: 80
          name: web
        - containerPort: 443
          name: websecure
        - containerPort: 8080
          name: admin
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          runAsNonRoot: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: acme-storage
          mountPath: /data
      volumes:
      - name: acme-storage
        persistentVolumeClaim:
          claimName: traefik-acme-pvc
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: traefik-dashboard
  namespace: traefik
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt
spec:
  rules:
  - host: kube.tuntelder.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: traefik
            port:
              number: 8080
  tls:
  - hosts:
    - traefik.kube.tuntelder.com
    secretName: traefik-dashboard-tls
